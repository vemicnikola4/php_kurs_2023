1. Lokalno Verzionisanje

2.Centralno verzionisanje
    Mana : imamo centralni server pa moramo uvek da budemo online. Jedino cent server ima evidenciju o svim verzijama. Mi kada dohvatimo app sa servera dohvatamo poslednju verziju. 

2.Distrubitivno verzionisanje
    *Glavna ideja: Nema cent server vec su svi poezani racunari ravnopravni.
    IMamo evidenc o svim verzijama. Kakokomuniciraju medjusobno svi su racunari ravnopravni. Pier network Torent.

    Git 
    sluzi da pravi neke verzije fajlova i sve radi na lokalu. Za Sluzi za Distrubitivno verziranje izvornog koda.
    Dva nacina rada:
    1. Pokrecu se odredjene komande preko termonala CLI. Comand line inteface.(powershel, cmd, bash).
    2.Drugi nacin je koriscenjem nekog GUI( graphical user interface.)
    --global (kaze)
    Prvo konfigurisemo
    git config --global user.name
    git config --global user.email
    cd=current directory
    git init pravi lokalni repozitorijum.git add salje u stageing area
    git commit
    git push

     Etape u lokalnom verzioniranju 
     Imamo neke fajlove koje smo menjali 
        Working Directory
        git add => Stageing Area/pozornica stavi se tu pa se onda vrsi comit
            Comit komanda kaze ta i ta osoba je u tom trenutku uradila ove promene. MOze se birati koliko fajlova zelimo da menjamo. 
            Napravi mi trenutni presek kopiju. Zapamti mi ovu verziju. Vremenski trenutak koji sepamtii na koji mozemo da se vratimo. Sadrzi info:
                ko
                kada
                sta je komitoovao
                poruka
        git rm --cached index.html  brisanje iz staging area
    Git – jedan od vodećih softvera za distributivno verzionisanje izvornog koda

    Git Hub sajt koji sadrzi Git(sof ya verzionisanje) i radi sa s
    public repo je javan svako moze da vidi ali ne moze da menja. Treba dozvola da se da od strane vlasnika.

    Kreiramo repo za domace i stavimo da je privat i delimo sa Stefanom i BEti.

    master vs main?

    License u Git Hub? 
    
    Da povezemo lokalni repo sa repo na git hub
    git remote add origin => git repo url

    prvo pull sa servera jer je vrlo verovatno da ne radimo sami na projektu.

    Pre svakog commita moramo da pullujemo sa servera da nam ucita promene koje drugi napravi pre nego sto pusujemo nase. Znaci trba nam najnovija verzija programa pre nego pusujemo. 

    stash cuva sve promene koje nisu u comitu. Napravi skriveni fajl sa svim izmenama. Vidi objasnjenje?

    Bukvalno svaki dan imamo neke zadatke koje trebamo da resimo kada smo spremni komitujemo ako se javi konflikt koji git ne moze da resi(git je pametan i resava konf ali ponekad ne moze pa moramo mi.) ja radim jedan problem kolega drugi i ond komitujemo neko to prekontrolise i odobri itd.

    Git status => informativno kaze u kom stanju je nas git.

KOraci u radu:
    Kreiranje repozitorijum
Generisanje prve osnovne verzije – master grana (inicijalni commit)
Preuzimanje poslednje verzije sa servera
Lokalni presek (commit)
Rešavanje mogućih konflikta
Prebacivanje promena sa lokala na server
Grananje (branch) i spajanje grana
Lokalno čuvanje izmenjenih fajlova bez komita (stash)
